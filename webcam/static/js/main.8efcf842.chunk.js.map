{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["FEATURES","WebcamComponent","props","useState","pan","tilt","zoom","refVideo","useRef","refSelectMic","refSelectVideo","refCanvas","refVideoSize","listDevices","a","navigator","devices","device","option","document","console","startWebcam","video","audio","mediaParams","deviceId","exact","options","muted","mirror","stream","track","capabilities","settings","r","feature","input","constraints","advanced","value","setCamFeatures","setStream","setVideoWH","extraInfo","params","videoId","audioId","width","height","useEffect","getController","enabled","camFeatures","style","display","name","type","disabled","fontSize","border","className","float","ref","onChange","e","onClick","setEnableAudio","enableAudio","autoPlay","margin","padding","defaultValue","wh","err","changeSize","canvas","ctx","blob","URL","marginTop","clear","src","title","frameBorder","allow","App","React","showDetail","setShowDetail","onStream","log","onMute","audioTest","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8efcf842.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState, Fragment } from 'react'\nimport style from './styles.module.css';\n\nconst PAN = 'pan';\nconst TILT = 'tilt';\nconst ZOOM = 'zoom';\nconst FEATURES = [PAN, TILT, ZOOM];\n\nexport const WebcamComponent = (props) => {\n  const [camFeatures, setCamFeatures] = useState({ pan: false, tilt: false, zoom: false });\n  const [stream, setStream] = useState(undefined);\n  const [videoWH, setVideoWH] = useState(undefined);\n  const [enableAudio, setEnableAudio] = useState(true);\n\n  const refVideo = useRef(null);\n  const refSelectMic = useRef(null);\n  const refSelectVideo = useRef(null);\n  const refCanvas = useRef(null);\n  const refVideoSize = useRef(null);\n\n  const listDevices = async () => {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n\n    devices.forEach((device) => {\n      const option = document.createElement('option');\n      option.value = device.deviceId;\n      switch (device.kind) {\n        case 'audioinput':\n          option.text = device.label || `mic ${refSelectMic.current.length + 1}`;\n          refSelectMic.current.appendChild(option);\n          break;\n        case 'videoinput':\n          option.text = device.label || `camera ${refSelectVideo.current.length + 1}`;\n          refSelectVideo.current.appendChild(option);\n          break;\n        default:\n          console.log('Skipped Device: ' + device.kind, device && device.label);\n          break;\n      }\n    });\n  }\n\n  const getParams = (video, audio) => {\n    return {\n      video: {\n        deviceId: video ? { exact: video } : undefined,\n        pan: true,\n        tilt: true,\n        zoom: true\n      },\n      audio: {\n        deviceId: audio ? { exact: audio } : undefined,\n        options: {\n          muted: true,\n          mirror: true\n        }\n      }\n    }\n  }\n\n  const startWebcam = async () => {\n    const mediaParams = getParams(refSelectVideo.current.value, refSelectMic.current.value);\n    const stream = await navigator.mediaDevices.getUserMedia(mediaParams);\n\n    refVideo.current.srcObject = stream;\n\n    const track = stream.getVideoTracks()[0];\n    const capabilities = track.getCapabilities();\n    const settings = track.getSettings();\n\n    const r = {};\n    FEATURES.forEach(feature => {\n      r[feature] = feature in settings;\n\n      if (r[feature]) {\n        const input = document.querySelector(`input[name=${feature}]`);\n        input.min = capabilities[feature].min;\n        input.max = capabilities[feature].max;\n        input.step = capabilities[feature].step;\n        input.value = settings[feature];\n        input.disabled = false;\n        input.oninput = async () => {\n          try {\n            const constraints = { advanced: [{ [feature]: input.value }] };\n            await track.applyConstraints(constraints);\n          } catch (err) {\n            console.log(err);\n          }\n        };\n      }\n    });\n    setCamFeatures(r);\n\n    setStream(stream);\n    setVideoWH('w: ' + settings.width + ' h: ' + settings.height);\n\n    const extraInfo = {\n      params: mediaParams,\n      videoId: refSelectVideo.current.value,\n      audioId: refSelectMic.current.value,\n      width: settings.width,\n      height: settings.height\n    }\n    props.onStream && props.onStream(stream, extraInfo);\n  }\n\n  useEffect(() => {\n    listDevices();\n    startWebcam();\n  }, []);\n\n  useEffect(() => {\n    if (stream) {\n      stream.getAudioTracks()[0].enabled = enableAudio;\n    }\n  }, [enableAudio])\n\n  const getController = (feature) => {\n    let enabled = camFeatures[feature];\n    return (<div style={{ display: enabled ? 'inline-block' : 'none' }}>\n      {feature}: <input name={feature} type=\"range\" disabled />\n    </div>)\n  }\n\n  const onMute = () => {\n    setEnableAudio(!enableAudio);\n    props.onMute && props.onMute(enableAudio);\n  }\n\n  const changeSize = (e) => {\n    const wh = e.target.value.split(':')\n    console.log(wh);\n    const track = stream.getVideoTracks()[0];\n    track.applyConstraints({\n      width: wh[0],\n      height: wh[1]\n    }).then(() => {\n      const settings = track.getSettings();\n      setVideoWH('w: ' + settings.width + ' h: ' + settings.height);\n    })\n      .catch(err => console.log(err))\n  }\n\n  const download = () => {\n    const canvas = refCanvas.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = refVideo.current.videoWidth;\n    canvas.height = refVideo.current.videoHeight;\n    ctx.drawImage(refVideo.current, 0, 0);\n    canvas.toBlob(blob => {\n      const a = document.createElement('a');\n      a.href = URL.createObjectURL(blob);\n      // a.href.onload = () => {\n      //   URL.revokeObjectURL(url);\n      // }\n      a.download = 'testfile.png';\n      document.body.appendChild(a);\n      a.click();\n    }, 'image/png');\n  }\n\n  return (\n    <div style={{ display: props.showDetail ? 'block' : 'none' }}>\n      <div style={{ fontSize: '1em', width: 'fit-content', border: '1px solid gray' }}>\n        <h3>Settings</h3>\n        <div className={style.gridContainer}>\n          <div className={style.gridItem}>Mic: </div>\n          <div className={style.gridItem}>\n            <select style={{ float: 'left' }} ref={refSelectMic} onChange={(e) => startWebcam()}></select>\n            {props.onMute &&\n              <button onClick={onMute} style={{ float: 'left' }}>{enableAudio ? 'MUTE' : 'UNMUTE'}</button>}\n          </div>\n          <div className={style.gridItem}>Video: </div>\n          <div className={style.gridItem}><select ref={refSelectVideo} onChange={(e) => startWebcam()}></select></div>\n        </div>\n        <div>\n          {getController(PAN)}\n          {getController(TILT)}\n          {getController(ZOOM)}\n        </div>\n      </div>\n\n      <hr />\n      <div style={{ float: 'left' }}>\n        <video ref={refVideo} autoPlay style={{ width: '20vw', margin: 'auto' }} />\n        <canvas ref={refCanvas} style={{ display: 'none' }} />\n      </div>\n      <div style={{ float: 'left', padding: '2em' }}>\n        <p style={{ fontSize: '0.8em' }}>{videoWH}</p>\n        <select defaultValue='640x480' ref={refVideoSize} onChange={(e) => changeSize(e)}>\n          <option value='3840:2160'>UHD 4K 3840x2160</option>\n          <option value='1920:1080'>FHD 1080p 1920x1080</option>\n          <option value='1280:720'>HD 720p 1280x720</option>\n          <option value='800:600'>SVGA 800x600</option>\n          <option value='640:480'>VGA 640x480</option>\n        </select>\n        <br /><button onClick={download} style={{ marginTop: '1em' }}>Download</button>\n      </div>\n\n      {props.audioTest &&\n        <div style={{ clear: 'both' }}>\n          <hr />\n          <p>Audio Test:</p>\n          <iframe\n            width=\"100\"\n            height=\"100\"\n            src=\"https://www.youtube.com/embed/1Hkc_2b03jw\"\n            title=\"Audio Test\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" />\n        </div>\n      }\n    </div>\n  );\n}\n","import React from 'react'\nimport { WebcamComponent } from '@rubenchoi/webcam';\n\nimport '@rubenchoi/webcam/dist/index.css'\n\nconst App = () => {\n  const [showDetail, setShowDetail] = React.useState(true);\n\n  const onStream = (stream, mediaParams) => {\n    console.log(stream, mediaParams);\n  }\n\n  const onMute = (muted) => {\n    console.log(muted ? 'muted' : 'unmuted');\n  }\n\n  return (\n    <div>\n      <h2>React App Webcam Control</h2>\n      <hr />\n      <button onClick={() => setShowDetail(!showDetail)}>{showDetail ? 'Hide' : 'Show'}</button>\n      <div style={{ width: '40vw', margin: '1em' }}>\n        <WebcamComponent onStream={onStream} onMute={onMute} audioTest showDetail={showDetail} />\n      </div>\n    </div >\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}