{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["FEATURES","counter","WebcamComponent","props","useState","pan","tilt","zoom","refVideo","useRef","refSelectMic","refSelectVideo","refCanvas","refCounter","listDevices","a","navigator","devices","device","option","document","console","startWebcam","video","audio","mediaParams","deviceId","exact","options","muted","mirror","stream","track","capabilities","settings","r","feature","input","constraints","advanced","value","setCamFeatures","setStream","setVideoWH","extraInfo","params","videoId","audioId","width","height","useEffect","getController","enabled","camFeatures","style","display","name","type","disabled","fontSize","border","className","float","ref","onChange","e","onClick","setEnableAudio","enableAudio","autoPlay","marginLeft","padding","defaultValue","request","msg","Number","err","changeSize","setFilename","filename","canvas","ctx","blob","URL","marginTop","defaultChecked","clear","src","title","frameBorder","allow","App","React","showDetail","setShowDetail","margin","onStream","log","onMute","audioTest","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.14ecaff9.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState, Fragment } from 'react'\r\nimport style from './styles.module.css';\r\n\r\nconst PAN = 'pan';\r\nconst TILT = 'tilt';\r\nconst ZOOM = 'zoom';\r\nconst FEATURES = [PAN, TILT, ZOOM];\r\nlet counter = 0;\r\n\r\nexport const WebcamComponent = (props) => {\r\n  const [camFeatures, setCamFeatures] = useState({ pan: false, tilt: false, zoom: false });\r\n  const [stream, setStream] = useState(undefined);\r\n  const [videoWH, setVideoWH] = useState(undefined);\r\n  const [enableAudio, setEnableAudio] = useState(true);\r\n  const [filename, setFilename] = useState('download');\r\n\r\n  const refVideo = useRef(null);\r\n  const refSelectMic = useRef(null);\r\n  const refSelectVideo = useRef(null);\r\n  const refCanvas = useRef(null);\r\n  const refCounter = useRef(null);\r\n\r\n  const listDevices = async () => {\r\n    const devices = await navigator.mediaDevices.enumerateDevices();\r\n\r\n    devices.forEach((device) => {\r\n      const option = document.createElement('option');\r\n      option.value = device.deviceId;\r\n      switch (device.kind) {\r\n        case 'audioinput':\r\n          option.text = device.label || `mic ${refSelectMic.current.length + 1}`;\r\n          refSelectMic.current.appendChild(option);\r\n          break;\r\n        case 'videoinput':\r\n          option.text = device.label || `camera ${refSelectVideo.current.length + 1}`;\r\n          refSelectVideo.current.appendChild(option);\r\n          break;\r\n        default:\r\n          console.log('Skipped Device: ' + device.kind, device && device.label);\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  const getParams = (video, audio) => {\r\n    return {\r\n      video: {\r\n        deviceId: video ? { exact: video } : undefined,\r\n        pan: true,\r\n        tilt: true,\r\n        zoom: true\r\n      },\r\n      audio: {\r\n        deviceId: audio ? { exact: audio } : undefined,\r\n        options: {\r\n          muted: true,\r\n          mirror: true\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const startWebcam = async () => {\r\n    const mediaParams = getParams(refSelectVideo.current.value, refSelectMic.current.value);\r\n    const stream = await navigator.mediaDevices.getUserMedia(mediaParams);\r\n\r\n    refVideo.current.srcObject = stream;\r\n\r\n    const track = stream.getVideoTracks()[0];\r\n    const capabilities = track.getCapabilities();\r\n    const settings = track.getSettings();\r\n\r\n    const r = {};\r\n    FEATURES.forEach(feature => {\r\n      r[feature] = feature in settings;\r\n\r\n      if (r[feature]) {\r\n        const input = document.querySelector(`input[name=${feature}]`);\r\n        input.min = capabilities[feature].min;\r\n        input.max = capabilities[feature].max;\r\n        input.step = capabilities[feature].step;\r\n        input.value = settings[feature];\r\n        input.disabled = false;\r\n        input.oninput = async () => {\r\n          try {\r\n            const constraints = { advanced: [{ [feature]: input.value }] };\r\n            await track.applyConstraints(constraints);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        };\r\n      }\r\n    });\r\n    setCamFeatures(r);\r\n\r\n    setStream(stream);\r\n    setVideoWH('w: ' + settings.width + ' h: ' + settings.height);\r\n\r\n    const extraInfo = {\r\n      params: mediaParams,\r\n      videoId: refSelectVideo.current.value,\r\n      audioId: refSelectMic.current.value,\r\n      width: settings.width,\r\n      height: settings.height\r\n    }\r\n    props.onStream && props.onStream(stream, extraInfo);\r\n  }\r\n\r\n  useEffect(() => {\r\n    listDevices();\r\n    startWebcam();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (stream) {\r\n      stream.getAudioTracks()[0].enabled = enableAudio;\r\n    }\r\n  }, [enableAudio])\r\n\r\n  const getController = (feature) => {\r\n    let enabled = camFeatures[feature];\r\n    return (<div style={{ display: enabled ? 'inline-block' : 'none' }}>\r\n      {feature}: <input name={feature} type=\"range\" disabled />\r\n    </div>)\r\n  }\r\n\r\n  const onMute = () => {\r\n    setEnableAudio(!enableAudio);\r\n    props.onMute && props.onMute(enableAudio);\r\n  }\r\n\r\n  const changeSize = (e) => {\r\n    const request = e.target.value.split(':')\r\n    const track = stream.getVideoTracks()[0];\r\n    track.applyConstraints({\r\n      width: request[0],\r\n      height: request[1]\r\n    }).then(() => {\r\n      const settings = track.getSettings();\r\n      let msg = (Number(request[0]) === settings.width && Number(request[1]) === settings.height) ? 'changed' : 'not supported - best mached';\r\n      setVideoWH('w: ' + settings.width + ' h: ' + settings.height + '    ' + msg);\r\n    })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  const download = () => {\r\n    const canvas = refCanvas.current;\r\n    const ctx = canvas.getContext('2d');\r\n    canvas.width = refVideo.current.videoWidth;\r\n    canvas.height = refVideo.current.videoHeight;\r\n    ctx.drawImage(refVideo.current, 0, 0);\r\n    canvas.toBlob(blob => {\r\n      const a = document.createElement('a');\r\n      a.href = URL.createObjectURL(blob);\r\n      a.download = filename + (refCounter.current.checked ? '_' + (counter++) : '') + '.png';;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n    }, 'image/png');\r\n    ctx.font = \"40px Arial\";\r\n    ctx.fillStyle = \"red\";\r\n    ctx.fillText(\"Downloaded\", 0, 40);\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: props.showDetail ? 'block' : 'none' }}>\r\n      <div style={{ fontSize: '1em', width: '100%', border: '1px solid gray' }}>\r\n        <h3>Settings</h3>\r\n        <div className={style.gridContainer}>\r\n          <div className={style.gridItem}>Mic: </div>\r\n          <div className={style.gridItem}>\r\n            <select style={{ float: 'left' }} ref={refSelectMic} onChange={(e) => startWebcam()}></select>\r\n            {props.onMute &&\r\n              <button onClick={onMute} style={{ float: 'left' }}>{enableAudio ? 'MUTE' : 'UNMUTE'}</button>}\r\n          </div>\r\n          <div className={style.gridItem}>Video: </div>\r\n          <div className={style.gridItem}><select ref={refSelectVideo} onChange={(e) => startWebcam()}></select></div>\r\n        </div>\r\n        <div>\r\n          {getController(PAN)}\r\n          {getController(TILT)}\r\n          {getController(ZOOM)}\r\n        </div>\r\n      </div>\r\n\r\n      <hr />\r\n      <div style={{ float: 'left', width: '50vw' }}>\r\n        <video ref={refVideo} autoPlay style={{ width: '40%' }} />\r\n        <canvas ref={refCanvas} style={{ width: '40%', marginLeft: '5%' }} />\r\n      </div>\r\n      <div style={{ float: 'left', padding: '2em' }}>\r\n        <p style={{ fontSize: '0.8em' }}>{videoWH}</p>\r\n        <select defaultValue='640:480' onChange={(e) => changeSize(e)}>\r\n          <option value='3840:2160'>UHD 4K 3840x2160</option>\r\n          <option value='1920:1080'>FHD 1080p 1920x1080</option>\r\n          <option value='1280:720'>HD 720p 1280x720</option>\r\n          <option value='800:600'>SVGA 800x600</option>\r\n          <option value='640:480'>VGA 640x480</option>\r\n        </select>\r\n        <br />\r\n        <input type=\"text\" onChange={e => setFilename(e.target.value)} value={filename} />\r\n        <button onClick={download} style={{ marginTop: '1em' }}>Download</button>\r\n        <label style={{ fontSize: '0.8em' }}><input type=\"checkbox\" ref={refCounter} defaultChecked />Auto-Increase</label>\r\n      </div>\r\n\r\n      {props.audioTest &&\r\n        <div style={{ clear: 'both' }}>\r\n          <hr />\r\n          <p>Audio Test:</p>\r\n          <iframe\r\n            width=\"100\"\r\n            height=\"100\"\r\n            src=\"https://www.youtube.com/embed/I6P24OTIeZI\"\r\n            title=\"Audio Test\"\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { WebcamComponent } from '@rubenchoi/webcam';\r\n\r\nimport '@rubenchoi/webcam/dist/index.css'\r\n\r\nconst App = () => {\r\n  const [showDetail, setShowDetail] = React.useState(true);\r\n\r\n  const onStream = (stream, mediaParams) => {\r\n    console.log(stream, mediaParams);\r\n  }\r\n\r\n  const onMute = (muted) => {\r\n    console.log(muted ? 'muted' : 'unmuted');\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: '90%', margin: 'auto' }}>\r\n      <h2>React App Webcam Control</h2>\r\n      <hr />\r\n      <button onClick={() => setShowDetail(!showDetail)}>{showDetail ? 'Hide' : 'Show'}</button>\r\n      <WebcamComponent onStream={onStream} onMute={onMute} audioTest showDetail={showDetail} />\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default App\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}